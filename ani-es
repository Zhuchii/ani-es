#!/bin/bash


main() {
# cosas para texto
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[0;37m'

# cosas para el fondo del texto
BG_RED='\033[41m'
BG_GREEN='\033[42m'
BG_YELLOW='\033[43m'
BG_BLUE='\033[44m'
BG_PURPLE='\033[45m'
BG_CYAN='\033[46m'
BG_WHITE='\033[47m'


NC='\033[0m'


pagiona_siguiente() {

clear 
  local url=$1

new_urls=$(python3 - <<END

try:
  url = "$url"

  lista = url.split('/')

  lista[-2]=int(lista[-2])+1

  new_url=''

  for i in lista:
      new_url+=f'{i}/'
  new_url=new_url[:-1]
  print(new_url)
except:
 x=1+1
END
)

new_dict=$(python3 - <<END
try:
  url = "$url"

  lista = url.split('/')

  lista[-2]=int(lista[-2])+1

  new_url=''
  del(lista[0])
  for i in lista:
      new_url+=f'{i}/'
  new_url=new_url[1:][:-1]

  print(new_url+'index.html')
except:
 x=1+1
END
)

new_number=$(python3 - <<END
try:
  url = "$url"

  lista = url.split('/')

  pepe=int(lista[-2])+1

  print(pepe)

except:
 x=1+1
END
)


rm -r jkanime.net

wget --user-agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36" -p $new_urls wget > /dev/null 2>&1

rm -r resultados.txt

grep -oP '(?<=<div class="title">)[^<]+(?=</div>)' $new_dict > resultados.txt


num_resultados=$(wc -l < resultados.txt)

echo -e "Pagina: $new_number ${NC}"

echo -e "Resultados para: $query"

opcion=$( (cat "resultados.txt"; echo -e "Siguiente"; echo "Anterior"; echo "Salir") | tac | fzf --prompt="Selecciona una opción: " --height=19 --border --info=inline --margin=1,1,0,0)


if [[ "$opcion" == "Siguiente" ]]; then
  pagiona_siguiente $new_urls
elif [[ "$opcion" == "Anterior" ]]; then
  pagina_anterior $new_urls
elif [[ "$opcion" == "Salir" ]]; then
  clear
  main
fi

}

pagina_anterior() {

clear 
  local url=$1

new_urls=$(python3 - <<END

try:
  url = "$url"

  lista = url.split('/')

  lista[-2]=int(lista[-2])-1

  new_url=''

  for i in lista:
      new_url+=f'{i}/'
  new_url=new_url[:-1]
  print(new_url)
except:
 x=1+1
END
)

new_dict=$(python3 - <<END
try:
  url = "$url"

  lista = url.split('/')

  lista[-2]=int(lista[-2])-1

  new_url=''
  del(lista[0])
  for i in lista:
      new_url+=f'{i}/'
  new_url=new_url[1:][:-1]

  print(new_url+'index.html')
except:
 x=1+1
END
)

new_number=$(python3 - <<END
try:
  url = "$url"

  lista = url.split('/')

  pepe=int(lista[-2])-1

  print(pepe)

except:
 x=1+1
END
)


rm -r jkanime.net

wget --user-agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36" -p $new_urls wget > /dev/null 2>&1

rm -r resultados.txt

grep -oP '(?<=<div class="title">)[^<]+(?=</div>)' $new_dict > resultados.txt


num_resultados=$(wc -l < resultados.txt)

echo -e "Pagina: $new_number ${NC}"
echo -e "Resultados para: $query"
opcion=$( (cat "resultados.txt"; echo "Siguiente"; echo "Anterior"; echo "Salir") | tac | fzf --prompt="Selecciona una opción: " --height=19 --border --info=inline --margin=1,1,0,0)


if [[ "$opcion" == "Siguiente" ]]; then
  pagiona_siguiente $new_urls
elif [[ "$opcion" == "Anterior" ]]; then
  pagina_anterior $new_urls
elif [[ "$opcion" == "Salir" ]]; then
  clear
  main
fi

}

read -p"Buscar Anime: " oracion


query=$(echo $oracion | tr ' ' '_')

wget --user-agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36" -p https://jkanime.net/buscar/$query/1/ > /dev/null 2>&1


input_file="jkanime.net/buscar/$query/1/index.html"


if [[ ! -f $input_file ]]; then
  echo "Archivo $input_file no encontrado."
  exit 1
fi

grep -oP '(?<=<div class="title">)[^<]+(?=</div>)' $input_file > resultados.txt

clear

num_resultados=$(wc -l < resultados.txt)

echo -e "Pagina: 1 ${NC}"
echo -e "Resultados para: $query"

opcion=$( (cat "resultados.txt"; echo "Siguiente"; echo "Anterior"; echo "Salir") | tac | fzf --prompt="Selecciona una opción: " --height=19 --border --info=inline --margin=1,1,0,0)


if [[ "$opcion" == "Siguiente" ]]; then
  pagiona_siguiente "https://jkanime.net/buscar/$query/1/"
elif [[ "$opcion" == "Anterior" ]]; then
  pagina_anterior "https://jkanime.net/buscar/$query/1/"
elif [[ "$opcion" == "Salir" ]]; then
  clear
  main
fi



titulo_elegido=$opcion

quer=$(echo "$titulo_elegido" | tr -cd '[:alnum:] -')
quer=$(echo $quer| tr ' ' '-')
qee=$(echo "$quer" | tr '[:upper:]' '[:lower:]')
nuevaurl="https://jkanime.net/$qee"

rm -r jkanime.net


value=$(jq -r --arg url "$nuevaurl" '.[$url]' "excepciones.json")

if [ -n "$value" ] && [ "$value" != "null" ]; then
  nuevaurl=$value
fi

wget --user-agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36" -p $nuevaurl > /dev/null 2>&1
clear
url_without_https="${nuevaurl/https:\/\//}"
clear
num_episodios=$(grep -oP '<a[^>]*class="[^"]*numbers[^"]*"[^>]*>[^<]*</a>' $url_without_https | grep -oP '\d+ - \d+' | grep -oP '\d+$' | tail -n 1)
clear
echo -e "Anime: $GREEN $titulo_elegido $WHITE"
echo -e "Episodios: $PURPLE $num_episodios $WHITE"
echo '|'

if [ -z "$num_episodios" ]; then
  echo -e "Enlace ${CYAN}$nuevaurl${NC} no válido. Por favor ve a ${GREEN} https://github.com/Zhuchii/ani-es ${NC} y abre un issue especificando el enlace y el anime que estabas intentando ver. Lo corregiré y actualizaré el script ;)"
  exit
fi


read -p"Episodio: " capi

capurl="$nuevaurl/$capi"


videocap(){
capa=$1
rm -r jkanime.net
wget --user-agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36" -p $capa > /dev/null 2>&1

src_contenido="$(grep -A 1 video jkanime.net/um.php* | grep url | cut -d"'" -f2 | head -n1)"

clear
echo "Reproduciendo... Capitulo: $capi"
mpv "$src_contenido" > /dev/null 2>&1

clear
echo "Elija una opcion:"
echo "1 Siguiente"
echo "2 Retroceder"
echo "3 Atras" 

read op
if [[ $op -eq 1 ]]; then
  clear
  capi=$((capi + 1)) 
  videocap "$nuevaurl/$capi"
elif [[ $op -eq 2 ]]; then
  clear
  capi=$((capi - 1)) 
  videocap "$nuevaurl/$capi"
elif [[ $op -eq 3 ]]; then
  clear
  main
fi
}
videocap $capurl
}



main
